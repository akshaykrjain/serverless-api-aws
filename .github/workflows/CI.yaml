name: 'CI'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  terraform:
    name: 'terraform'
    runs-on: ubuntu-latest
    env:
      tf_actions_working_dir: ./infra
      tf_version: 1.1.1

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.tf_actions_working_dir }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1.2.1
      with:
        terraform_version: ${{ env.tf_version }}

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      #continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init 
            -backend-config=bucket=infra-bucket-terraform-states 
            -backend-config=key=serverless-api-aws 
            -backend-config=dynamodb_table=TerraformStateLock
            -backend-config=region=eu-west-1 
            -input=false 

    - name: Terraform Validate
      id: validate
      run: terraform validate

    - name: Terraform Plan
      id: plan
      run: terraform plan -out tfplan
      continue-on-error: false

    - uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`${process.env.PLAN}\`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

      # Deploy changes only on push to master.     
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply  -auto-approve tfplan
